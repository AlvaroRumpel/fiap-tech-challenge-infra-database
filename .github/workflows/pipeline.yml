name: Setup Database

on:
  push:
    branches: ["main"]

jobs:
  setup-terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v2.0.2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Destroy
        id: destory
        run: terraform destroy
        continue-on-error: true

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: apply
        run: terraform apply -auto-approve
        continue-on-error: true

  setup-kubernetes:
    runs-on: ubuntu-latest
    needs: setup-terraform

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          mask-aws-account-id: "no"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        id: install-kubectl

      - name: Update KubeConfig
        shell: bash
        run: |
          aws eks update-kubeconfig --name fiap-tech-challenge-infra-db --region=us-east-2

      - name: Deploy
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          export ECR_REPOSITORY=${{ env.ECR_REGISTRY }}/fiap-tech-challenge-api:latest        
          cd ./kubernetes/mysql
          kubectl apply -f secrets.yaml
          envsubst < mysql-deployment.yaml | kubectl apply -f -
          kubectl apply -f mysql-pv.yaml
          kubectl apply -f mysql-svc.yaml
          kubectl rollout restart deployment mysql-deployment
